{"version":3,"sources":["components/Error.jsx","components/Question.jsx","components/Form.jsx","components/Spending.jsx","components/ListSpendings.jsx","helpers.js","components/BudgetControl.jsx","App.js","serviceWorker.js","index.js"],"names":["Error","message","className","Question","saveBudget","useState","error","setError","action","onSubmit","event","preventDefault","stopPropagation","target","amount","value","trim","parseInt","type","name","placeholder","Form","updateSpendings","id","shortid","generate","reset","Spending","ListSpendings","spendings","map","spending","key","checkBudget","budget","initial","remaining","BudgetControl","props","App","setBudget","showQuestion","setShowQuestion","setSpendings","newRemaining","length","JSON","stringify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"4OAWeA,EARD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OAAO,uBAAGC,UAAU,4BAA4BD,IC4ClCE,EA5CE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAEVC,oBAAS,GAFC,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAmBpC,OACC,kBAAC,WAAD,KACC,qDACCD,GAAS,kBAAC,EAAD,CAAOL,QAAQ,2BACzB,0BAAMO,OAAO,IAAIC,SAnBD,SAACC,GAClBA,EAAMC,iBACND,EAAME,kBAGgC,KAArCF,EAAMG,OAAOC,OAAOC,MAAMC,QAC1BC,SAASP,EAAMG,OAAOC,OAAOC,MAAO,KAAO,EAE3CR,GAAS,IAETA,GAAS,GACTH,EAAWa,SAASP,EAAMG,OAAOC,OAAOC,MAAO,QAS9C,2BACCG,KAAK,SACLC,KAAK,SACLjB,UAAU,eACVkB,YAAY,0BAEb,2BACCF,KAAK,SACLH,MAAM,sBACNb,UAAU,mC,gBC+BAmB,EA/DF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EAEXjB,oBAAS,GAFE,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA0BrC,OACC,0BAAMC,OAAO,IAAIC,SAvBG,SAACC,GACrBA,EAAMC,iBACND,EAAME,kBAG8B,KAAnCF,EAAMG,OAAOM,KAAKJ,MAAMC,QACa,KAArCN,EAAMG,OAAOC,OAAOC,MAAMC,QAC1BC,SAASP,EAAMG,OAAOC,OAAOC,MAAMC,OAAQ,KAAO,EAElDT,GAAS,IAETA,GAAS,GAETe,EAAgB,CACfH,KAAMT,EAAMG,OAAOM,KAAKJ,MAAMC,OAC9BF,OAAQG,SAASP,EAAMG,OAAOC,OAAOC,MAAMC,OAAQ,IACnDO,GAAIC,IAAQC,aAEbf,EAAMG,OAAOa,WAMb,yDACCpB,GAAS,kBAAC,EAAD,CAAOL,QAAQ,qBACzB,yBAAKC,UAAU,SACd,+CACA,2BACCgB,KAAK,OACLhB,UAAU,eACVkB,YAAY,uCACZD,KAAK,UAIP,yBAAKjB,UAAU,SACd,iDACA,2BACCgB,KAAK,SACLhB,UAAU,eACVkB,YAAY,UACZD,KAAK,YAIP,2BACCD,KAAK,SACLhB,UAAU,8BACVa,MAAM,oBCvCKY,EAhBE,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,OACzB,OACC,wBAAIZ,UAAU,UACb,2BACEiB,EACD,0BAAMjB,UAAU,SAAhB,IAA0BY,EAA1B,QCWWc,EAfO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxB,OACC,yBAAK3B,UAAU,qBACd,uCACC2B,EAAUC,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAAUC,IAAKD,EAASR,GAAIJ,KAAMY,EAASZ,KAAML,OAAQiB,EAASjB,cCTzDmB,EAAc,SAACC,GAAY,IAC/BC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,UAWjB,MARc,IAAVD,EAAiBC,EACR,qBACQ,GAAVD,EAAgBC,EACd,sBAEA,uBCSCC,EAdO,SAACC,GAAW,IAAD,EACDA,EAAMJ,OAA7BC,EADwB,EACxBA,QAASC,EADe,EACfA,UACjB,OACC,kBAAC,WAAD,KACC,yBAAKlC,UAAU,uBAAf,iBAAoDiC,GACpD,yBAAKjC,UAAW+B,EAAYK,EAAMJ,SAAlC,cAAuDE,KCuC3CG,MA1Cf,WAAe,MAEclC,mBAAS,IAFvB,mBAEP6B,EAFO,KAECM,EAFD,OAG0BnC,oBAAS,GAHnC,mBAGPoC,EAHO,KAGOC,EAHP,OAIoBrC,mBAAS,IAJ7B,mBAIPwB,EAJO,KAIIc,EAJJ,KAqBd,OACC,yBAAKzC,UAAU,aACd,gCACC,6CACA,yBAAKA,UAAU,iCACbuC,GAAgB,kBAAC,EAAD,CAAUrC,WAnBZ,SAACW,GACnByB,EAAU,CAAEL,QAASpB,EAAOqB,UAAWrB,IACvC2B,GAAgB,MAkBb,yBAAKxC,UAAU,OACd,yBAAKA,UAAU,oBACZuC,GAAgB,kBAAC,EAAD,CAAMnB,gBAhBN,SAACS,GACxBY,EAAa,GAAD,mBAAKd,GAAL,CAAgBE,KAG5B,IAAMa,EAAeV,EAAOE,UAAYL,EAASjB,OACjD0B,EAAU,2BAAKN,GAAN,IAAcE,UAAWQ,SAa9B,yBAAK1C,UAAU,mBACb2B,EAAUgB,OAAS,GAAK,kBAAC,EAAD,CAAehB,UAAWA,IACvB,OAA3BiB,KAAKC,UAAUb,IAAoB,kBAAC,EAAD,CAAeA,OAAQA,UC3B9Cc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1D,GACL2D,QAAQ3D,MAAMA,EAAML,c","file":"static/js/main.8902ff92.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({ message }) => {\r\n\treturn <p className=\"alert alert-danger error\">{message}</p>;\r\n};\r\n\r\nError.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React, { Fragment, useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Question = ({ saveBudget }) => {\r\n\t//Definición del State\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst defAmount = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tif (\r\n\t\t\tevent.target.amount.value.trim() === '' ||\r\n\t\t\tparseInt(event.target.amount.value, 10) <= 0\r\n\t\t) {\r\n\t\t\tsetError(true);\r\n\t\t} else {\r\n\t\t\tsetError(false);\r\n\t\t\tsaveBudget(parseInt(event.target.amount.value, 10));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2>Coloca tu presupuesto</h2>\r\n\t\t\t{error && <Error message=\"Presupuesto incorrecto\" />}\r\n\t\t\t<form action=\"#\" onSubmit={defAmount}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\tclassName=\"u-full-width\"\r\n\t\t\t\t\tplaceholder=\"Coloca tu presupuesto\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Definir Presupuesto\"\r\n\t\t\t\t\tclassName=\"button-primary u-full-width\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nQuestion.propTypes = {\r\n\tsaveBudget: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Question;\r\n","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({ updateSpendings }) => {\r\n\t//Definición del State\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst saveSpending = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tif (\r\n\t\t\tevent.target.name.value.trim() === '' ||\r\n\t\t\tevent.target.amount.value.trim() === '' ||\r\n\t\t\tparseInt(event.target.amount.value.trim(), 10) <= 0\r\n\t\t) {\r\n\t\t\tsetError(true);\r\n\t\t} else {\r\n\t\t\tsetError(false);\r\n\r\n\t\t\tupdateSpendings({\r\n\t\t\t\tname: event.target.name.value.trim(),\r\n\t\t\t\tamount: parseInt(event.target.amount.value.trim(), 10),\r\n\t\t\t\tid: shortid.generate(),\r\n\t\t\t});\r\n\t\t\tevent.target.reset();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form action=\"#\" onSubmit={saveSpending}>\r\n\t\t\t<h2>Agrega tus gastos aquí</h2>\r\n\t\t\t{error && <Error message=\"Gasto Incorrecto\" />}\r\n\t\t\t<div className=\"campo\">\r\n\t\t\t\t<label>Nombre Gasto</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"u-full-width\"\r\n\t\t\t\t\tplaceholder=\"Ej: Transporte, Alimentación, etc\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"campo\">\r\n\t\t\t\t<label>Cantidad Gasto</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"Number\"\r\n\t\t\t\t\tclassName=\"u-full-width\"\r\n\t\t\t\t\tplaceholder=\"Ej: 500\"\r\n\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"button-primary u-full-width\"\r\n\t\t\t\tvalue=\"Agregar Gasto\"\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nForm.propTypes = {\r\n\tupdateSpendings: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spending = ({ name, amount }) => {\r\n\treturn (\r\n\t\t<li className=\"gastos\">\r\n\t\t\t<p>\r\n\t\t\t\t{name}\r\n\t\t\t\t<span className=\"gasto\">${amount} </span>\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nSpending.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tamount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Spending;\r\n","import React from 'react';\r\nimport Spending from './Spending';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListSpendings = ({ spendings }) => {\r\n\treturn (\r\n\t\t<div className=\"gastos-realizados\">\r\n\t\t\t<h2>Listado</h2>\r\n\t\t\t{spendings.map((spending) => (\r\n\t\t\t\t<Spending key={spending.id} name={spending.name} amount={spending.amount} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nListSpendings.propTypes = {\r\n\tspendings: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ListSpendings;\r\n","export const checkBudget = (budget) => {\r\n\tconst { initial, remaining } = budget;\r\n\tlet className;\r\n\r\n\tif (initial * 0.25 > remaining) {\r\n\t\tclassName = 'alert alert-danger';\r\n\t} else if (initial * 0.5 > remaining) {\r\n\t\tclassName = 'alert alert-warning';\r\n\t} else {\r\n\t\tclassName = 'alert alert-success';\r\n\t}\r\n\r\n\treturn className;\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { checkBudget } from '../helpers';\r\n\r\nconst BudgetControl = (props) => {\r\n\tconst { initial, remaining } = props.budget;\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"alert alert-primary\">Presupuesto: ${initial}</div>\r\n\t\t\t<div className={checkBudget(props.budget)}>Restante: ${remaining}</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nBudgetControl.propTypes = {\r\n\tbudget: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default BudgetControl;\r\n","import React, { useState } from 'react';\nimport Question from './components/Question';\nimport Form from './components/Form';\nimport ListSpendings from './components/ListSpendings';\nimport BudgetControl from './components/BudgetControl';\n\nfunction App() {\n\t//Definición del State\n\tconst [budget, setBudget] = useState({});\n\tconst [showQuestion, setShowQuestion] = useState(true);\n\tconst [spendings, setSpendings] = useState([]);\n\n\t//Función que guarda el presupuesto desde el componente Question y cambia el State de su visibilidad\n\tconst saveBudget = (value) => {\n\t\tsetBudget({ initial: value, remaining: value });\n\t\tsetShowQuestion(false);\n\t};\n\n\t//Función que modifica el array de gastos en el componente Form\n\tconst updateSpendings = (spending) => {\n\t\tsetSpendings([...spendings, spending]);\n\n\t\t//Se descuenta el cantidad del gasto al Presupuesto en su valor restante\n\t\tconst newRemaining = budget.remaining - spending.amount;\n\t\tsetBudget({ ...budget, remaining: newRemaining });\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<header>\n\t\t\t\t<h1>Gasto Semanal</h1>\n\t\t\t\t<div className=\"contenido-principal contenido\">\n\t\t\t\t\t{showQuestion && <Question saveBudget={saveBudget} />}\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t\t{!showQuestion && <Form updateSpendings={updateSpendings} />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t\t{spendings.length > 0 && <ListSpendings spendings={spendings} />}\n\t\t\t\t\t\t\t{JSON.stringify(budget) !== '{}' && <BudgetControl budget={budget} />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}